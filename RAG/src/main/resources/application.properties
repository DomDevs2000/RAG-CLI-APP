
spring.application.name=RAG
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-3.5-turbo

# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.url=jdbc:postgresql://mscproject-rag-pgvector.chuygmsa0ngy.eu-west-2.rds.amazonaws.com/test2

spring.datasource.username=postgres
spring.datasource.password=${POSTGRES_PASS}
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
spring.ai.vectorstore.pgvector.dimension=1536
spring.datasource.driverClassName=org.postgresql.Driver
spring.ai.openai.embedding.enabled=true
spring.ai.openai.embedding.model=text-embedding-ada-002


# docker run -it --rm --name postgres -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres ankane/pgvector


# psql -U postgres -h localhost -p 5432


# CREATE EXTENSION IF NOT EXISTS vector;
# CREATE EXTENSION IF NOT EXISTS hstore;
# CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
#
# CREATE TABLE IF NOT EXISTS vector_store (
# 	id uuid DEFAULT uuid_generate_v4() PRIMARY KEY,
# 	content text,
# 	metadata json,
# 	embedding vector(1536)
# );
#
# CREATE INDEX ON vector_store USING HNSW (embedding vector_cosine_ops);
4
